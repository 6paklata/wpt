# This is the configuration file for Azure Pipelines, used to run tests on
# macOS. Documentation to help understand this setup:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema
# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/v2-windows
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/multiple-phases
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/index
#
# Self-hosted agents for Windows 10 and Insider Preview are used:
# - 'Hosted Windows Client' is the latest Windows 10
# - 'Hosted Windows Client Next' is 10 Windows Insider Preview
#
# In addition to this configuration file, the "Build pull requests from forks
# of this repository" setting must also be enabled in the Azure DevOps project:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/github#validate-contributions-from-forks

trigger: none # disable builds for branches

jobs:
- job: root
  displayName: './wpt test-jobs'
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - template: tools/ci/azure/checkout.yml
  - script: |
      ./wpt test-jobs | while read job; do
        echo "$job"
        echo "##vso[task.setvariable variable=$job;isOutput=true]true";
      done
    name: test_jobs
    displayName: 'Run ./wpt test-jobs'

- job: infrastructure_macOS
  displayName: 'infrastructure/ tests (macOS)'
  dependsOn: root
  condition: dependencies.root.outputs['test_jobs.wptrunner_infrastructure']
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - template: tools/ci/azure/checkout.yml
  - template: tools/ci/azure/pip_install.yml
    parameters:
      packages: virtualenv
  - template: tools/ci/azure/install_fonts.yml
  - template: tools/ci/azure/install_certs.yml
  - template: tools/ci/azure/install_chrome.yml
  - template: tools/ci/azure/install_firefox.yml
  - template: tools/ci/azure/install_safari.yml
  - template: tools/ci/azure/update_hosts.yml
  - template: tools/ci/azure/update_manifest.yml
  - script: no_proxy='*' ./wpt run --yes --no-manifest-update --manifest MANIFEST.json --metadata infrastructure/metadata/ --channel=dev chrome infrastructure/
    displayName: 'Run tests (Chrome Dev)'
  - script: no_proxy='*' ./wpt run --yes --no-manifest-update --manifest MANIFEST.json --metadata infrastructure/metadata/ --channel=nightly firefox infrastructure/
    displayName: 'Run tests (Firefox Nightly)'
  - script: no_proxy='*' ./wpt run --yes --no-manifest-update --manifest MANIFEST.json --metadata infrastructure/metadata/ --channel=preview safari infrastructure/
    displayName: 'Run tests (Safari Technology Preview)'

- job: tools_unittest_macOS
  displayName: 'tools/ unittests (macOS)'
  dependsOn: root
  condition: dependencies.root.outputs['test_jobs.tools_unittest']
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - template: tools/ci/azure/checkout.yml
  - template: tools/ci/azure/tox_pytest.yml
    parameters:
      directory: tools/
      toxenv: py27

- job: wptrunner_unittest_macOS
  displayName: 'tools/wptrunner/ unittests (macOS)'
  dependsOn: root
  condition: dependencies.root.outputs['test_jobs.wptrunner_unittest']
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - template: tools/ci/azure/checkout.yml
  - template: tools/ci/azure/tox_pytest.yml
    parameters:
      directory: tools/wptrunner/

- job: wpt_integration_macOS
  displayName: 'tools/wpt/ tests (macOS)'
  dependsOn: root
  condition: dependencies.root.outputs['test_jobs.wpt_integration']
  pool:
    vmImage: 'macOS-10.13'
  steps:
  # full checkout required
  - template: tools/ci/azure/install_chrome.yml
  - template: tools/ci/azure/install_firefox.yml
  - template: tools/ci/azure/update_hosts.yml
  - template: tools/ci/azure/tox_pytest.yml
    parameters:
      directory: tools/wpt/

- job: tools_unittest_win10
  displayName: 'tools/ unittests (Windows 10)'
  #dependsOn: root
  #condition: dependencies.root.outputs['test_jobs.tools_unittest']
  pool:
    name: 'Hosted Windows Client'
  steps:
  - template: tools/ci/azure/checkout.yml
  - script: systeminfo
    displayName: 'Show system info'
  - script: set username
    displayName: 'Show user info'
  #- template: tools/ci/azure/pip_install.yml
  - script: |
      rd /s /q "$(Agent.ToolsDirectory)"
      xcopy /s /i "agent\_work\_tool" "$(Agent.ToolsDirectory)"
    displayName: 'Update tools'
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
      addToPath: true
    displayName: 'Use Python 2.7'
  - script: pip install --upgrade --user virtualenv
    displayName: 'Install Python packages'
  #- template: tools/ci/azure/install_fonts.yml
  #- template: tools/ci/azure/install_certs.yml
  - script: certutil –addstore -enterprise –f "Root" tools\certs\cacert.pem
    displayName: 'Install web-platform.test certificate'
  #- template: tools/ci/azure/install_chrome.yml
  #- template: tools/ci/azure/install_firefox.yml
  #- template: tools/ci/azure/update_hosts.yml
  - powershell: python wpt make-hosts-file | Out-File $env:systemroot\System32\drivers\etc\hosts -Encoding ascii -Append
    displayName: 'Update hosts'
  #- template: tools/ci/azure/update_manifest.yml
  - script: python ./wpt manifest
    displayName: 'Update manifest'
  - script: python ./wpt run --yes --no-manifest-update --install-fonts --manifest MANIFEST.json --metadata infrastructure/metadata/ edge_webdriver infrastructure/
    displayName: 'Run tests (Edge)'
